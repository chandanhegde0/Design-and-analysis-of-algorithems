#include<stdio.h>
#define INF 999
#define MAX 10

void dijkstra(int G[MAX][MAX],int n,int snode);

int main()
{
        int G[MAX][MAX],i,j,n,u;
        printf("Enter no. of vertices:");
        scanf("%d",&n);
        printf("\nEnter the adjacency matrix:\n");

        for(i=0;i<n;i++)
                for(j=0;j<n;j++)
                        scanf("%d",&G[i][j]);

        printf("\nEnter the starting node:");
        scanf("%d",&u);
        dijkstra(G,n,u);

        return 0;
}

void dijkstra(int G[MAX][MAX],int n,int snode)
{
        int cost[MAX][MAX],distance[MAX],pred[MAX];
        int visited[MAX],count,mindistance,next,i,j;
        for(i=0;i<n;i++)
                for(j=0;j<n;j++)
                        if(G[i][j]==0)
                                cost[i][j]=INF;
                        else
                                cost[i][j]=G[i][j];
        for(i=0;i<n;i++)
        {
                distance[i]=cost[snode][i];
                pred[i]=snode;
                visited[i]=0;
        }
        distance[snode]=0;
        visited[snode]=1;
        count=1;

        while(count<n-1)
        {
                mindistance=INF;
                for(i=0;i<n;i++)
                {
                        if(distance[i]<mindistance && !visited[i])
                        {
                                mindistance=distance[i];
                                next=i;
                        }
                }
                visited[next]=1;
                for(i=0;i<n;i++)
                        if(!visited[i])
                                if(mindistance+cost[next][i]<distance[i])
                                {
                                        distance[i]=mindistance+cost[next][i];
                                        pred[i]=next;
                                }
                count++;

        }
        for(i=0;i<n;i++)
        {
                if(i!=snode)
                {
                        printf("\nDistance of node %d = %d\n", i,distance[i]);
                        printf("\nPath= %d\n",i);
                        j=i;
                        do
                        {
                                j=pred[j];
                                printf("<-%d",j);
                        }while(j!=snode);
                }
        }
}
